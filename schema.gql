# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AppInfo {
  id: String!
  name: String!
  package: String!
  version: String!
  versionCode: Float!
  platform: String!
  hash: String!
  iconBase64: String!
  storeUrl: String
  createdAt: DateTime!
  playStoreInfo: PlayStoreInfo
  appStoreInfo: AppStoreInfo
}

type AppIssue {
  id: String!
  issue: String!
  noteUserEmail: String
  reviewStatusUserEmail: String
  note: String
  reviewStatus: String!
  noteUpdated: DateTime
  reviewStatusUpdated: DateTime
}

type AppNote {
  id: String!
  note: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AppStoreInfo {
  id: String!
  artworkUrl512: String!
  screenshotUrls: [String!]!
  appletvScreenshotUrls: [String!]!
  ipadScreenshotUrls: [String!]!
  artistViewUrl: String!
  artworkUrl60: String!
  artworkUrl100: String!
  isGameCenterEnabled: Boolean!
  supportedDevices: [String!]!
  kind: String!
  features: [String!]!
  advisories: [String!]!
  languageCodesISO2A: [String!]!
  fileSizeBytes: Float!
  sellerUrl: String
  averageUserRatingForCurrentVersion: Float
  userRatingCountForCurrentVersion: Float
  trackViewUrl: String!
  releaseDate: DateTime!
  releaseNotes: String!
  sellerName: String!
  primaryGenreName: String!
  version: String!
  trackName: String!
  contentAdvisoryRating: String
  trackContentRating: String
  trackId: String!
  artistId: String!
  artistName: String!
  price: Float!
  description: String!
  bundleId: String!
  currentVersionReleaseDate: DateTime!
  formattedPrice: String!
  minimumOsVersion: String!
  averageUserRating: Float!
  userRatingCount: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AppSubmission {
  id: String!
  userId: String!
  status: Float!
  priority: Float!
  isBinarySubmission: Boolean!
  isInteractive: Boolean!
  isParent: Boolean!
  reviewStatus: String!
  riskScore: Float
  createdAt: DateTime!
  updatedAt: DateTime!
  analysisStart: DateTime
  analysisEnd: DateTime
  hasAnalysisIssue: Boolean!
  parentSubmissionId: String
  appInfo: AppInfo
  appIssues: [AppIssue!]!
  appNote: AppNote!
  user: User!
  farmServer: FarmServer
}

type AppSubscription {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  isActive: Boolean!
  package: String!
  platform: String!
  lastAnalysis: DateTime!
  isParent: Boolean!
  isWatched: Boolean!
  parentSubscriptionId: String
  playStoreInfo: PlayStoreInfo
  appStoreInfo: AppStoreInfo
  user: User!
  appSubmissions: [AppSubmission!]!
}

type AppSubscriptionResultDto {
  results: [AppSubscription!]!
  count: Int!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type FarmServer {
  id: String!
  name: String!
  url: String!
  androidEnabled: Boolean!
  iosEnabled: Boolean!
  interactiveEnabled: Boolean!
}

type GroupUserAccess {
  canViewReports: Boolean!
  canSubmit: Boolean!
  locked: Boolean!
}

type PlayStoreInfo {
  id: String!
  name: String!
  package: String!
  version: String!
  url: String!
  price: Float!
  description: String!
  iconLargeUrl: String!
  iconSmallUrl: String!
  contentRating: String
  categoryCode: String
  category: String!
  developer: String!
  developerWebsite: String
  privacyPolicy: String
  ratingValue: Float!
  ratingCount: Float!
  installCount: String!
  size: String!
  minVersion: String!
  lastUpdated: DateTime
  inAppPurchases: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  permissions: [PlayStorePermission!]!
}

type PlayStorePermission {
  id: String!
  category: String!
  permission: String!
}

type Query {
  adminUsers: [User!]!
  adminUser(userId: String!): User!
  searchPlayStore(query: String!, countryCode: String): [PlayStoreInfo!]!
  searchAppStore(query: String!, countryCode: String): [AppStoreInfo!]!
  appSubmissions(
    page: Int = 1
    pageSize: Int = 10
    queryString: String = null
    sortColumn: String = "createdAt"
    reviewStatus: String = "default"
    platform: String = null
  ): SubmissionQueryResultDto!
  adminAppSubmissions(
    page: Int = 1
    pageSize: Int = 10
  ): SubmissionQueryResultDto!
  adminAppSubmission(appSubmissionId: String!): AppSubmission!
  appSubscriptions(
    platform: String
    orderBy: String = "createdAt"
    orderDir: String = "DESC"
    appQuery: String = null
    userId: String
    page: Int = 1
    pageSize: Int = 10
  ): AppSubscriptionResultDto!
  adminAppSubscriptions(
    platform: String
    orderBy: String = "createdAt"
    orderDir: String = "DESC"
    appQuery: String = null
    userId: String
    page: Int = 1
    pageSize: Int = 10
  ): AppSubscriptionResultDto!
}

type SubmissionQueryResultDto {
  results: [AppSubmission!]!
  count: Int!
}

type User {
  id: String!
  email: String!
  createdAt: DateTime!
  lastLogin: DateTime!
  updatedAt: DateTime!
  group: String!
  subGroups: [String!]!
  apiKey: String!
  loginAttempts: Float!
  locked: Boolean!
  defaultPriority: Float!
  resetToken: String!
  needsPasswordChange: Boolean!
  farmServer: FarmServer!
  access: UserAccess!
  groupUserAccess: GroupUserAccess!
  config: UserConfig!
  appSubmissionsCount: Float!
}

type UserAccess {
  androidAnalysis: Boolean!
  customCredentials: Boolean!
  customReport: String
  interactiveEnabled: Boolean!
  iosAnalysis: Boolean!
  maxAndroidSubmissions: Float!
  maxIosSubmissions: Float!
  mdmIntegration: Boolean!
  taiwanResults: Boolean!
  groupAdmin: Boolean!
  maxGroupUsers: Float!
}

type UserConfig {
  country: String!
  mdmSideLoadedAppNotificationsEnabled: Boolean!
  mdmThreatScoreThreshold: Float
  riskScoreThreshold: Float
  riskScoreThresholdAlertEmail: String
  tourTaken: Boolean!
}
